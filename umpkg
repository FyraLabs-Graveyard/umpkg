#!/usr/bin/python3

import koji
import typer
import os
import sys
import umpkg_cli.cfg as config
import umpkg_cli.util as util
#from umpkg_cli.util import session

cfg = config.read_config()

app = typer.Typer()
@app.command()
def build(
    path: str = typer.Argument(None, help="The path to the package"),
):
    """
    Builds a package from source
    """
    if not path:
        # split the spec names by space
        specs = cfg['spec'].split(' ')
        for spec in specs:
            # add .spec to the spec name if it's not already there
            if not spec.endswith('.spec'):
                spec += '.spec'
            if os.path.exists(spec):
                srpm = util.build_src(spec)
            else:
                print(f'Spec {spec} not found')
                sys.exit(1)
    else:
        if not path.endswith('.spec'):
            path += '.spec'
        if os.path.exists(path):
            srpm = util.build_src(path)
        else:
            print(f'Spec {path} not found')
            sys.exit(1)
    os.system(f'rpmbuild --rebuild -bb {srpm} --define "_rpmdir build/rpm"')


@app.command()
def push(
    tag: str = typer.Argument(..., help="The Koji tag to push"),
    pkg: str = typer.Argument(None, help="The package name"),
):
    """
    Builds and pushes a package to Koji
    """
    return util.push(tag,pkg)

if __name__ == "__main__":
    app()